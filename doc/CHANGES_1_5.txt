General:
========
*

Client-side:
============
* Add WS Addressing Support

Server-side:
============
* Add support for requests using chunked transfer encoding in KDSoap Server.
  The full message is assembled before being passed on for processing.

* Optimize parsing of large incoming requests so that headers are parsed only once.

* Provide a new way of treating incoming requests: the server object can receive
  raw XML incrementally and parse it itself, e.g. to avoid building up the full
  request in memory, in case of very large requests. See KDSoapServerRawXMLInterface.

* Rename request and response to _request and _response in order to avoid clashes
  with variable names coming from the WSDL.

* Add missing fwd decls for the args used in server methods.

* Fix parsing of Content-Type header to support spaces after ';' and double-quotes around the value
  (SOAP-112)

WSDL parser / code generator changes, applying to both client and server side:
================================================================
* Source incompatible change: methods that return an
  optional polymorphic type will now return a pointer instead of a
  const reference. Null references lead to crashes and therefore the change
  was unavoidable.

* Try harder to find a prefix for some namespaces.
  Important: this can rename some generated classes from __Class to PREFIX__Class.
  This source incompatible change was necessary to fix clashes between unprefixed
  classes coming from different namespaces, in some WSDL files.

* Parse namespace on portType correctly

* Fix infinite recursion when type A contains a member A with minoccurs=0

* Improve generated code so that it compiles without warnings when enabling -Wshadow

* Fix KDSoapJob return message deserializing in RPC mode.
  The generated code in the slot wasn't unwrapping the wrapper element.
  As a result the return object was all default-constructed, for lack
  of finding the right elements in the reply.

* Add missing builtin type xsd:QName.

* Fix erroneous "class qint64;" declaration in generated code for wsdl:arrayType="xsd:integer[]"

* Fix elements being incorrectly-marked-as-nil when copying generated classes (issue72).

* Ignore leading/trailing space in definition of soapAction.

* Handle attributes without a type (default to anySimpleType).

* Generate correct C++ code in case of special characters like '-' in operation names.

* Avoid generating duplicate methods when the complexType uses choice with the same elements in various choices

* Relative paths to schemas being imported or included are now resolved based on the location of the parent file
  rather than the location of the toplevel WSDL file.

